<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sk.mall.dao.OrderItemMapper">
    <resultMap id="BaseResultMap" type="com.sk.mall.entity.OrderItem">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="orderId" jdbcType="INTEGER" property="orderId"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
    </resultMap>

    <resultMap id="resultIncludeGoods" type="com.sk.mall.entity.OrderItem" extends="BaseResultMap">
        <association property="goods" javaType="com.sk.mall.entity.Goods">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="goodsName" jdbcType="VARCHAR" property="goodsName"/>
            <result column="price" jdbcType="INTEGER" property="price"/>
            <result column="num" jdbcType="INTEGER" property="num"/>
            <result column="upTime" jdbcType="TIMESTAMP" property="upTime"/>
            <result column="category" jdbcType="INTEGER" property="category"/>
            <result column="categoryName" jdbcType="VARCHAR" property="categoryName"/>
            <result column="detailCate" jdbcType="VARCHAR" property="detailCate"/>
            <result column="activityId" jdbcType="INTEGER" property="activityId"/>
            <result column="isSale" jdbcType="INTEGER" property="isSale"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, orderId, goodsId, num
    </sql>

    <select id="getOrderItemByOrderId" resultMap="resultIncludeGoods">
        select o.*, g.*
        from orderitem o,
             goods g
        where o.goodsId = g.id
          and orderId = #{orderId}
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orderitem
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from orderitem
        where id = #{id,jdbcType=INTEGER}
    </delete>


    <insert id="insertSelective" parameterType="com.sk.mall.entity.OrderItem">
        insert into orderitem
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderId != null">
                orderId,
            </if>
            <if test="goodsId != null">
                goodsId,
            </if>
            <if test="num != null">
                num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByExampleSelective" parameterType="map">
        update orderitem
        <set>
            <if test="record.itemid != null">
                itemId = #{record.itemid,jdbcType=INTEGER},
            </if>
            <if test="record.orderid != null">
                orderId = #{record.orderid,jdbcType=INTEGER},
            </if>
            <if test="record.goodsid != null">
                goodsId = #{record.goodsid,jdbcType=INTEGER},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update orderitem
        set id = #{record.id,jdbcType=INTEGER},
        orderId = #{record.orderid,jdbcType=INTEGER},
        goodsId = #{record.goodsid,jdbcType=INTEGER},
        num = #{record.num,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.sk.mall.entity.OrderItem">
        update orderitem
        <set>
            <if test="orderId != null">
                orderId = #{orderId,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                goodsId = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getTotalGoods" resultType="java.util.HashMap">
        select goodsId,countNum from hotgoods order by countNum desc
    </select>
</mapper>